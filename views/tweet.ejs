<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/sakura.css/css/sakura-dark.css" media="screen and (prefers-color-scheme: dark)" />
    <title>Tweets</title>
</head>


<body>
    <%- include("./partials/header.ejs") %>
    
    <% if (!!create_msg) { %>
        <div class="alert alert-success"><%= create_msg %></div>
    <% } %>

    <div id="tweets">
        <% if (data) { %>
        <% data.forEach(tweet => { %>
        <section id="<%=tweet._id %>">
            <div>Användarnamn: <p class="anvandarNamn"><%=tweet.userName %></p> </div>
            <div>Tweet: <%= tweet.createdAt %></div>
            <p data-text><p class="content"><%=tweet.textContent %></p></p>
            <div>Status: <p class="status"><%=tweet.status %></p></div>
            <button  data-id="<%= tweet._id %>">Radera</button>
            <button edit-id="<%= tweet._id %>">Edit</button>

            <hr />
        </section>
        <% }) %>
        <% } %>
    </div>

    <form id="editForm" method="POST" action="editTweet" hidden>
        <input type="hidden" name="id" id="editFormId">
        <label for="name">Användarnamn:</label>
        <input type="text" id="name" name="name"><br>

        <label for="tweet">Tweet:</label>
        <textarea id="tweet" name="tweet"></textarea><br>

        <label for="status">Status:</label>
        <select id="status" name="status">
            <option value="public">Public</option>
            <option value="private">Private</option>
        </select><br>

        <button type="submit">Save Changes</button>
    </form>


    <hr>


    <script>
        function handleEdit(id, oldUserName, oldTextContent, oldStatus) {
            // access each input and repopulate them
            const editFormEl = document.getElementById("editForm");
            console.log("handleEdit - Form Elements", editFormEl.elements);

            // check if editFormEl.elements is not null
            if (editFormEl.elements) {
                // name
                editFormEl.elements.name.value = oldUserName;
                
                // quote
                editFormEl.elements.tweet.value = oldTextContent;
                // visibilty
                editFormEl.elements.status.value = oldStatus;
            }
            // Show edit form
            document.getElementById("editForm").hidden = false;
            // Setup submit handler for edit form
        //     editFormEl.onsubmit = (evt) => {
        //         evt.preventDefault();
        //         // DONE send a put request to server
        //         // with new values for name and quote
        //         // with current selected id
        //         const newName = editFormEl.elements.name.value;
        //         const newTweet = editFormEl.elements.tweet.value;
        //         const newStatus = editFormEl.elements.status.value;
        //         // tip: use fetch
        //         console.log(id)
        //         fetch(`/tweets/${id}/edit`, {
        //                 method: "PUT",
        //                 headers: {
        //                     "Content-Type": "application/json", // let server know that body is a string of json
        //                 },
        //                 body: JSON.stringify({
        //                     name: newName,
        //                     tweet: newTweet,
        //                     status: newStatus
        //                 }),
        //             })
        //             .then((resp) => {
        //                 console.log(resp);
        //                 if (resp.redirected) {
        //                     window.location.href = resp.url;
        //                 }
        //             })
        //             .catch((err) => console.error(err));
        //     };

        }


        const tweets = document.getElementById("tweets");

        tweets.addEventListener("click", (event) => {
            event.preventDefault();
            console.log(event.target);
            if (event.target.nodeName == "BUTTON" && event.target.getAttribute("edit-id")) {

                console.log("Halllå")
                const id = event.target.getAttribute("edit-id");
                const tweetElement = document.getElementById(id);
                console.log(tweetElement)
                const oldUserName = tweetElement.getElementsByClassName("anvandarNamn")[0].textContent;
                console.log(oldUserName)
                // const oldUserName = document.querySelector(`#${id} .anvandarNamn`).textContent.slice(2);

                const oldTextContent = tweetElement.getElementsByClassName("content")[0].textContent;
                const oldStatus = tweetElement.getElementsByClassName("status")[0].textContent;

                // const oldTextContent = tweetElement.querySelector("p").textContent;
                // const oldStatus = tweetElement.querySelector("div:last-child").textContent;
                document.getElementById("editFormId").value = id;
                handleEdit(id, oldUserName, oldTextContent, oldStatus);
            } else if (event.target.nodeName == "BUTTON" && event.target.getAttribute("data-id")) {
                const id = event.target.getAttribute("data-id");
                const options = {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        id: id
                    })
                };
                fetch("/user/deleteTweet", options)
                    .then(response => response.json())
                    .then((data) => {
                        console.log("data", data);
                        if (data.result == "success") {
                            document.getElementById(id).remove();
                        }
                    });
            }
        });

        // const editTweet = document.getElementById("tweets");

        // editTweet.addEventListener("click", (event) => {

        //     event.preventDefault();

        //     console.log(event.target);

        //     if (event.target.nodeName == "BUTTON") {

        //         // console.log(event.target.getAttribute§("data-id"));

        //         const id = event.target.getAttribute("edit-id");

        //         console.log(id)
        //         const options = {

        //             method: 'PUT',

        //             headers: {
        //                 'Content-Type': 'application/json'
        //             },

        //             body: JSON.stringify({
        //                 id: id
        //             })
        //         }
        //     }
        // })
    </script>

</body>

</html>